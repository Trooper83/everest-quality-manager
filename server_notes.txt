159.223.199.205
EVEREST_DB_USER=everest_admin
EVEREST_DB_PASSWORD=@EverestDB#2023!
EVEREST_DB_URL=jdbc:postgresql://localhost/everest_int

Postgres user password: @PSQL#2023!

1. install postgres
2. create user (need steps)
3. create db (need steps)
 - login to psql
	- sudo -u postgres psql
	- create database <name>;
4. grant privileges to user 'grant all privileges on database <db_name> to <user_name>;'

4. copy sql file to server
  - scp everest.sql root@159.223.199.205:/apps/libs

5. connect to db
  - \c <db_name>

add env vars to .bash_profile
1. create ~/.bash_profile
2. export ENV_VAR=<value>
3. source ~/.bash_profile


Dumping sql from pg_admin
1. Select model db and select backup
2. Select Plain
3. Submit

Restore Using psql
1. copy file to server
2. enter psql shell | sudo -u postgres psql
3. \c <db_name>
4. \i <file>

Running the app
1. ensure there is swap enabled (linux) https://www.digitalocean.com/community/tutorials/how-to-add-swap-space-on-ubuntu-20-04

Setting up NGINX
- https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-22-04
- https://certbot.eff.org/instructions?ws=nginx&os=ubuntufocal

- Add to /etc/nginx/sites-available/everestquality.com
server {
    listen       80;
    server_name  everestquality.com;

    location / {
        proxy_pass http://127.0.0.1:8080;
    }
}

- Create symlink to sites-available
sudo ln -s /etc/nginx/sites-available/everestquality /etc/nginx/sites-enabled/

Service to run everest
1. Create sh script to execute java app in /root/.scripts/
2. Add systemd service to execute sh script

war files are located in /app/libs
sql files are located in /sql

Updating version on server
1. Upload new version to /apps/libs using scp
2. Rename war to ROOT.war
2. Stop tomcat service `systemctl stop tomcat.service
3. Update database if required (when schema changes)
4. Remove ROOT.war from /opt/tomcat/webapps and Copy new version ROOT.war to /opt/tomcat/webapps
4. Start service `systemctl start tomcat.service
5. Check status `systemctl status tomcat.service

https://www.digitalocean.com/community/tutorials/how-to-configure-a-linux-service-to-start-automatically-after-a-crash-or-reboot-part-1-practical-examples
Creating systemd service
1. Add file to /etc/systemd/system/everest.service

=====Start====
[Unit]
Description=Runs the everest app
After=network.target

[Service]
<add all environment variables here>
Environment=<name>="<value>"
Type=simple

[Install]
WantedBy=multi-user.target
====End====

Install Tomcat: https://www.digitalocean.com/community/tutorials/how-to-install-apache-tomcat-10-on-ubuntu-20-04
Place jdbc driver in /opt/tomcat/lib (don't know if this is required???)

Rename war file to ROOT.war and place in /opt/tomcat/webapps

To enable tomcat gui open port 8080 'sudo ufw allow 8080' (open) -> 'sudo ufw deny 8080' (close)