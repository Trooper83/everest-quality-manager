buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
        classpath "org.grails.plugins:hibernate5:7.1.0"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.2.4"
    }
}

version "0.1"
group "com.everlution"

apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"com.bertramlabs.asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    maven { url "https://repo.grails.org/grails/core" }
    maven {
        url 'https://repo.maven.apache.org/maven2'
        name 'Maven Central'
    }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly('org.springframework.boot:spring-boot-devtools:2.5.6')
    compile "com.github.javafaker:javafaker:1.0.2"
    compile 'org.springframework.boot:spring-boot-starter-logging:2.5.6'
    compile 'org.springframework.boot:spring-boot-autoconfigure:2.5.6'
    compile 'org.grails:grails-core:5.0.0'
    compile 'org.springframework.boot:spring-boot-starter-actuator:2.5.6'
    compile 'org.springframework.boot:spring-boot-starter-tomcat:2.5.6'
    compile 'org.grails:grails-web-boot:5.0.0'
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile 'org.grails.plugins:spring-security-core:4.0.3'
    compile "org.grails.plugins:events"
    compile 'org.grails.plugins:hibernate5:7.1.0'
    compile 'org.hibernate:hibernate-core:5.6.1.Final'
    compile "org.grails.plugins:gsp"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    runtime 'com.h2database:h2:1.4.200'
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "javax.xml.bind:jaxb-api:2.3.1"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.2.4"
    testCompile "io.micronaut:micronaut-inject-groovy"
    testCompile 'org.grails:grails-gorm-testing-support:2.2.0'
    testCompile 'org.mockito:mockito-core:4.0.0'
    testCompile 'org.grails:grails-web-testing-support:2.2.0'
    testCompile "org.grails.plugins:geb"
    testCompile "org.seleniumhq.selenium:selenium-remote-driver:3.14.0"
    testCompile "org.seleniumhq.selenium:selenium-api:3.14.0"
    testCompile "org.seleniumhq.selenium:selenium-support:3.14.0"
    testRuntime "org.seleniumhq.selenium:selenium-chrome-driver:3.14.0"
}

bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always', 
        '-noverify', 
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}


tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
}


assets {
    minifyJs = true
    minifyCss = true
}
