
buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
        classpath "org.grails.plugins:hibernate5:7.3.0"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.4.6"
        classpath 'org.grails.plugins:database-migration:4.1.0'
    }
}

version "0.1"
group "com.everlution"

apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"com.bertramlabs.asset-pipeline"
apply plugin:"org.grails.grails-gsp"

repositories {
    maven { url "https://repo.grails.org/grails/core" }
    maven {
        url 'https://repo.maven.apache.org/maven2'
        name 'Maven Central'
    }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

/* required due to failed faker dependency as documented
*  here: https://github.com/DiUS/java-faker/issues/327
*  can remove once fixed or switch to
*  https://www.datafaker.net/documentation/getting-started/#installation
*/
configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.module.toString() == 'org.yaml:snakeyaml') {
            details.artifactSelection {
                it.selectArtifact(DependencyArtifact.DEFAULT_TYPE, null, null)
            }
        }
    }
}

sourceSets {
    main {
        resources {
            srcDir 'grails-app/migrations'
        }
    }
}

dependencies {
    developmentOnly('org.springframework.boot:spring-boot-devtools:2.7.2')
    implementation 'org.springframework.boot:spring-boot-starter-logging:2.7.2'
    implementation 'org.springframework.boot:spring-boot-autoconfigure:2.7.2'
    implementation 'org.grails:grails-core:5.2.1'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.2'
    implementation 'org.grails:grails-web-boot:5.2.1'
    implementation 'org.grails:grails-logging'
    implementation 'org.grails:grails-plugin-rest'
    implementation 'org.grails:grails-plugin-databinding'
    implementation 'org.grails:grails-plugin-i18n'
    implementation 'org.grails:grails-plugin-services'
    implementation 'org.grails:grails-plugin-url-mappings'
    implementation 'org.grails:grails-plugin-interceptors'
    implementation 'org.grails.plugins:cache'
    implementation "org.grails.plugins:async"
    implementation 'org.grails.plugins:scaffolding'
    implementation 'org.grails.plugins:spring-security-core:5.1.0'
    implementation 'org.grails.plugins:spring-security-ui:4.0.0.M1'
    implementation "org.grails.plugins:events"
    implementation 'org.grails.plugins:hibernate5:7.3.0'
    implementation 'org.hibernate:hibernate-core:5.6.1.Final'
    implementation 'org.grails.plugins:gsp'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.3.5'
    implementation 'org.apache.tomcat:tomcat-jdbc:10.0.23'
    implementation 'org.grails.plugins:database-migration:4.1.0'
    implementation 'org.liquibase:liquibase-core:4.8.0'
    console 'org.grails:grails-console'
    profile 'org.grails.profiles:web'
    runtimeOnly 'com.h2database:h2:1.4.200'
    runtimeOnly 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'
    runtimeOnly 'com.bertramlabs.plugins:asset-pipeline-grails:3.4.6'
    testImplementation 'org.glassfish.web:el-impl:2.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-tomcat:2.7.2'
    testImplementation 'org.grails:grails-gorm-testing-support:2.6.1'
    testImplementation 'org.mockito:mockito-core:4.6.1'
    testImplementation 'org.grails:grails-web-testing-support:2.6.1'
    testImplementation 'org.gebish:geb-spock:5.1'
    testImplementation "com.github.javafaker:javafaker:1.0.2"
    testImplementation "org.seleniumhq.selenium:selenium-remote-driver:3.14.0"
    testImplementation "org.seleniumhq.selenium:selenium-api:3.14.0"
    testImplementation "org.seleniumhq.selenium:selenium-support:3.14.0"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-chrome-driver:3.14.0"
}

bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always', 
        '-noverify', 
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}


tasks.withType(Test) {
    useJUnitPlatform()
    systemProperty "geb.env", "chrome"
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
}


assets {
    minifyJs = true
    minifyCss = true
}
